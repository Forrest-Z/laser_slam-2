#ifndef  C_C_H_
#define  C_C_H_
#pragma once

#include "pthread.h"
#include "MainCtrl_Define.h"
#include "NetPortal/NetPortal.h"
#include "Task/IOA.h"
//#include "SLAM/SLAM.h"
#include "SubCtrlCom/SubCtrlCom.h"
#include "ParseXML.h"
#include "Task/Task.h"
#include "LogFile/LogFile.h"
#include "GPS/CGPS.h"
#include "BN/BN.h"
#include "MapService/LocalMapBuilder.h"
#include "MapService/AmbientGridMap.h"
#include <signal.h>
#include "slam_v1.h"
class CSlamV1;

class C_C
{
public:
	C_C(void);
	~C_C(void);

	int C_CInit();
	int C_CRun(int argc, char* argv[]);
	int C_CStop();
	int C_CUninit();

	NetPortal m_CNetPortal;
	SubCtrlCom m_CSubCtrlCom;
//	SLAM m_CSLAMTest;


	
	CSlamV1* m_pCSLAM;


	IOA m_CIOA;
	Task m_CTask;
	LogFile m_CLogFile;
	ParseXML m_CParseXML;
	CGPS m_CGPS;
	BN m_CBN;
	LocalMapBuilder m_CLocalMapBuilder;
	AmbientGridMap m_CAmbientGridMap;
	//SubCtrlCom m_CSubCtrlCom;

	static int ExceptionMsg();
private:
	char *m_pcLogFilePath;


	int LoadConfig(char *pcConfigPath);
	char m_cNetPortalParams[80];
	int ParseIP(char *pcData,char *pcIP);


	pthread_t m_hThreadSLAM;
	pthread_t m_hThreadNetPortal;
	pthread_t m_hThreadIOA;
	pthread_t m_hThreadSubCtrlCom;
	pthread_t m_hThreadLogFile;
	pthread_t m_hThreadGPS;
	pthread_t m_hThreadBN;

	static void* ThreadSLAM(void* lpParam);
	static void* ThreadNetPortal(void* lpParam);
	static void* ThreadIOA(void* lpParam);
	static void* ThreadSubCtrlCom(void* lpParam);
	static void* ThreadLogFile(void* lpParam);
	static void* ThreadGPS(void* lpParam);
	static void* ThreadBN(void* lpParam);


	unsigned char m_ucRobotID;

	SLAM_CallBack m_stSLAM_CallBack;



	static float m_fCurPos[3];

	//zhanhe
	static int cbSLAM(float x,float y,float th);
	static int cbSICK(vector<float>& bearing);

	static int cbCtrlCmdParse(float x,float y,float th);

	static C_C *m_pCC_CThis;
};
#endif
